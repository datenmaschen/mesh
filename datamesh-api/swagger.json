{
  "openapi": "3.0.1",
  "info": {
    "title": "Datamesh API",
    "description": "A simple ASP.NET Core Web API",
    "termsOfService": "https://example.com/terms",
    "contact": {
      "name": "Philipp Frenzel",
      "email": "Philipp@Frenzel.net"
    },
    "license": {
      "name": "Use under MIT"
    },
    "version": "v1"
  },
  "paths": {
    "/api/DataDomainItems": {
      "get": {
        "tags": [
          "DataDomainItems"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataDomain"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataDomain"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataDomain"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DataDomainItems"
        ],
        "summary": "Creates a DataDomain.",
        "description": "Sample request:\r\n            \r\n    POST api/DataDomainItems\r\n    {\r\n       \"Name\": \"Item1\",\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomain"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomain"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomain"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomain"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomain"
                }
              }
            }
          },
          "201": {
            "description": "Returns the newly created item"
          },
          "400": {
            "description": "If the item is null"
          }
        }
      }
    },
    "/api/DataDomainItems/{id}": {
      "get": {
        "tags": [
          "DataDomainItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomain"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomain"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomain"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataDomainItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomain"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomain"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "DataDomainItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DataDomain": {
        "required": [
          "devOpsProjectName",
          "key",
          "name",
          "nameAbbrevationLong",
          "nameAbbreviationShort",
          "subscriptionId",
          "subscriptionName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "maxLength": 43,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "nameAbbrevationLong": {
            "minLength": 1,
            "type": "string"
          },
          "nameAbbreviationShort": {
            "minLength": 1,
            "type": "string"
          },
          "subscriptionName": {
            "minLength": 1,
            "type": "string"
          },
          "subscriptionId": {
            "type": "string",
            "format": "uuid"
          },
          "devOpsProjectName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
{
  "openapi": "3.0.1",
  "info": {
    "title": "Datamesh API",
    "description": "ASP.NET Core Web API for Datamesh",
    "termsOfService": "https://example.com/terms",
    "contact": {
      "name": "Philipp Frenzel",
      "email": "Philipp@Frenzel.net"
    },
    "license": {
      "name": "Use under MIT"
    },
    "version": "v1"
  },
  "paths": {
    "/api/DataDomainItems": {
      "get": {
        "tags": [
          "DataDomainItems"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataDomainDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataDomainDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataDomainDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DataDomainItems"
        ],
        "summary": "Creates a DataDomain.",
        "description": "Sample request:\r\n            \r\n    POST api/DataDomainItems\r\n    {\r\n       \"Name\": \"Item1\",\r\n       \"Key\": \"Item1\",\r\n       \"NameAbbreviationShort\": \"Item1\",\r\n       \"NameAbbreviationLong\": \"Item1\",\r\n       \"SubscriptionName\": \"Item1\",\r\n       \"SubscriptionId\": \"Item1\",\r\n       \"DevOpsProjectName\": \"Item1\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomainDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomainDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomainDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomainDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomainDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomainDto"
                }
              }
            }
          },
          "201": {
            "description": "Returns the newly created item"
          },
          "400": {
            "description": "If the item is null"
          }
        }
      }
    },
    "/api/DataDomainItems/{id}": {
      "get": {
        "tags": [
          "DataDomainItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomainDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomainDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataDomainDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataDomainItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomain"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomain"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "DataDomainItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DataproductItems": {
      "get": {
        "tags": [
          "DataproductItems"
        ],
        "summary": "Fetch all Dataproduct(s).",
        "description": "Sample request:\r\n            \r\n    GET api/Dataproduct",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataproductDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataproductDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataproductDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DataproductItems"
        ],
        "summary": "Creates a Dataproduct.",
        "description": "Sample request:\r\n            \r\n    POST api/Dataproduct\r\n    {\r\n       \"Name\": \"Item1\",\r\n       \"Key\": \"Key\",\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataproductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataproductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataproductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataproductDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataproductDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataproductDto"
                }
              }
            }
          },
          "201": {
            "description": "Returns the newly created item"
          },
          "400": {
            "description": "If the item is null"
          }
        }
      }
    },
    "/api/DataproductItems/{id}": {
      "get": {
        "tags": [
          "DataproductItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DataproductDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataproductDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataproductDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataproductItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataproductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataproductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataproductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "DataproductItems"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DataDomain": {
        "required": [
          "devOpsProjectName",
          "key",
          "name",
          "nameAbbreviationLong",
          "nameAbbreviationShort",
          "subscriptionId",
          "subscriptionName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "maxLength": 43,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "nameAbbreviationLong": {
            "minLength": 1,
            "type": "string"
          },
          "nameAbbreviationShort": {
            "minLength": 1,
            "type": "string"
          },
          "subscriptionName": {
            "minLength": 1,
            "type": "string"
          },
          "subscriptionId": {
            "type": "string",
            "format": "uuid"
          },
          "devOpsProjectName": {
            "minLength": 1,
            "type": "string"
          },
          "dataproducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dataproduct"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataDomainDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "nameAbbreviationShort": {
            "type": "string",
            "nullable": true
          },
          "nameAbbreviationLong": {
            "type": "string",
            "nullable": true
          },
          "subscriptionName": {
            "type": "string",
            "nullable": true
          },
          "subscriptionId": {
            "type": "string",
            "format": "uuid"
          },
          "devOpsProjectName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dataproduct": {
        "required": [
          "adGroupContributor",
          "apiUrl",
          "dateCreatedAt",
          "deputyOwner",
          "description",
          "isActive",
          "key",
          "owner",
          "purpose",
          "refreshInHour",
          "serviceLevelObjectiveStability",
          "status",
          "type",
          "usageRestrictions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 43,
            "type": "string",
            "nullable": true
          },
          "key": {
            "maxLength": 43,
            "minLength": 1,
            "type": "string"
          },
          "adGroupContributor": {
            "minLength": 1,
            "type": "string"
          },
          "owner": {
            "minLength": 1,
            "type": "string"
          },
          "deputyOwner": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "purpose": {
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DataproductStatus"
          },
          "type": {
            "$ref": "#/components/schemas/DataproductType"
          },
          "refreshInHour": {
            "type": "integer",
            "format": "int32"
          },
          "serviceLevelObjectiveStability": {
            "$ref": "#/components/schemas/DataproductServiceLevelObjectiveStability"
          },
          "usageRestrictions": {
            "minLength": 1,
            "type": "string"
          },
          "apiUrl": {
            "minLength": 1,
            "type": "string"
          },
          "catalogId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          },
          "dateCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "dataDomainId": {
            "type": "string",
            "format": "uuid"
          },
          "dataDomain": {
            "$ref": "#/components/schemas/DataDomain"
          }
        },
        "additionalProperties": false
      },
      "DataproductDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/DataproductType"
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "deputyOwner": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "dataDomainId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "DataproductServiceLevelObjectiveStability": {
        "enum": [
          "stable",
          "explorative"
        ],
        "type": "string"
      },
      "DataproductStatus": {
        "enum": [
          "New",
          "Requested",
          "AdGroupProvisioning",
          "Deploying",
          "Active",
          "Depreciated"
        ],
        "type": "string"
      },
      "DataproductType": {
        "enum": [
          "StandardDataproductSpark",
          "DataproductLogical",
          "IndividualDataproduct"
        ],
        "type": "string"
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}